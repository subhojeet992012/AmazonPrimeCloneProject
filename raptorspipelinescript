pipeline {
    agent any
    tools {
        jdk 'JDK17'
        nodejs 'NodeJS'
    }
    environment {
        SCANNER_HOME = tool 'sonarscanner'
    }
    parameters {
        string(name: 'ECR_REPO_NAME', description: 'Enter the name of the ECR', defaultValue: 'amazon-prime')
        string(name: 'AWS_ACCOUNT_ID', description: 'Enter the AccountID', defaultValue: '730335350252')
    }
    stages {
        stage('1. Git Checkout') {
            steps {
                git branch: 'main', 
                url: 'https://github.com/subhojeet992012/AmazonPrimeCloneProject.git'
            }
        }
        stage('2. SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh """
                        ${SCANNER_HOME}/bin/sonar-scanner \
                        -Dsonar.projectName=amazon-prime \
                        -Dsonar.projectKey=amazon-prime
                    """
                }
            }
        }
        stage('3. Sonar Quality Gate') {
            steps {
                waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
            }
        }
        stage('4. NPM Install') {
            steps {
                sh "npm install"
            }
        }
        stage('5. Trivy Scanning') {
            steps {
                sh """
                    who
                    whoami
                    pwd
                    docker run --rm -v \$(pwd):/project aquasec/trivy:latest filesystem /project > trivy-scan-results.txt
                """
            }
        }
        stage('6. Docker Image Build') {
            steps {
                sh "docker build -t ${params.ECR_REPO_NAME} ."
            }
        }
        stage('7. Create ECR Repository') {
            steps {
                withCredentials([string(credentialsId: 'access_key', variable: 'ACCESS_KEY'), string(credentialsId: 'secret_key', variable: 'SECRET_KEY')]) {
                    sh """
                        aws configure set aws_access_key_id $ACCESS_KEY
                        aws configure set aws_secret_access_key $SECRET_KEY
                        aws ecr describe-repositories --repository-names ${params.ECR_REPO_NAME} --region us-east-1 || \
                        aws ecr create-repository --repository-name ${params.ECR_REPO_NAME} --region us-east-1
                    """
                }
            }
        }
        stage('8. Logging to ECR and tagging image') {
            steps {
                withCredentials([string(credentialsId: 'access_key', variable: 'ACCESS_KEY'), string(credentialsId: 'secret_key', variable: 'SECRET_KEY')]) {
                    sh """
                        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${params.AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com
                        docker tag ${params.ECR_REPO_NAME} ${params.AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/${params.ECR_REPO_NAME}:$BUILD_NUMBER
                        docker tag ${params.ECR_REPO_NAME} ${params.AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/${params.ECR_REPO_NAME}:latest
                    """
                }
            }
        }
        stage('9. Push the image to ECR') {
            steps {
                withCredentials([string(credentialsId: 'access_key', variable: 'ACCESS_KEY'), string(credentialsId: 'secret_key', variable: 'SECRET_KEY')]) {
                    sh """
                        docker push ${params.AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/${params.ECR_REPO_NAME}:$BUILD_NUMBER
                        docker push ${params.AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/${params.ECR_REPO_NAME}:latest
                    """
                }
            }
        }
        stage('10. Cleanup the Images') {
            steps {
                sh """
                    docker rmi -f ${params.AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/${params.ECR_REPO_NAME}:$BUILD_NUMBER
                    docker rmi -f ${params.AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/${params.ECR_REPO_NAME}:latest
                """
            }
        }
    }
}
